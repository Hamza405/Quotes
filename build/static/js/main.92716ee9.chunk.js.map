{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","hooks/use-http.js","services/api.js","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","store/QuotesContext.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/Quotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","store/QuotesProvider.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuotesContext","createContext","quotes","updateQuotes","newQuotes","QuoteItem","props","item","text","author","to","QuoteList","ascending","history","useHistory","location","useLocation","qureyParams","URLSearchParams","search","quotesState","useContext","sortedList","get","sort","quoteA","quoteB","sorting","onClick","sufix","pathname","list","map","quote","NoQuotesFound","noquotes","Quotes","quotesContext","useEffect","length","MainNavigation","style","header","logo","nav","activeClassName","active","Layout","main","children","QuoteDetails","React","lazy","NewQuote","NotFound","App","fallback","path","exact","QuoteProvider","useState","setQuotes","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92716ee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer ( state, action ) {\n    if ( action.type === 'SEND' )\n    {\n        return {\n            data: null,\n            error: null,\n            status: 'pending',\n        };\n    }\n\n    if ( action.type === 'SUCCESS' )\n    {\n        return {\n            data: action.responseData,\n            error: null,\n            status: 'completed',\n        };\n    }\n\n    if ( action.type === 'ERROR' )\n    {\n        return {\n            data: null,\n            error: action.errorMessage,\n            status: 'completed',\n        };\n    }\n\n    return state;\n}\n\nfunction useHttp ( requestFunction, startWithPending = false ) {\n    const [ httpState, dispatch ] = useReducer( httpReducer, {\n        status: startWithPending ? 'pending' : null,\n        data: null,\n        error: null,\n    } );\n\n    const sendRequest = useCallback(\n        async function ( requestData ) {\n            dispatch( { type: 'SEND' } );\n            try\n            {\n                const responseData = await requestFunction( requestData );\n                dispatch( { type: 'SUCCESS', responseData } );\n            } catch ( error )\n            {\n                dispatch( {\n                    type: 'ERROR',\n                    errorMessage: error.message || 'Something went wrong!',\n                } );\n            }\n        },\n        [ requestFunction ]\n    );\n\n    return {\n        sendRequest,\n        ...httpState,\n    };\n}\n\nexport default useHttp;","const FIREBASE_DOMAIN = 'https://tishreen-62882-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes () {\n    const response = await fetch( `${ FIREBASE_DOMAIN }/quotes.json` );\n    const data = await response.json();\n\n    if ( !response.ok )\n    {\n        throw new Error( data.message || 'Could not fetch quotes.' );\n    }\n\n    const transformedQuotes = [];\n\n    for ( const key in data )\n    {\n        const quoteObj = {\n            id: key,\n            ...data[ key ],\n        };\n\n        transformedQuotes.push( quoteObj );\n    }\n\n    return transformedQuotes;\n}\n\nexport async function getSingleQuote ( quoteId ) {\n    const response = await fetch( `${ FIREBASE_DOMAIN }/quotes/${ quoteId }.json` );\n    const data = await response.json();\n\n    if ( !response.ok )\n    {\n        throw new Error( data.message || 'Could not fetch quote.' );\n    }\n\n    const loadedQuote = {\n        id: quoteId,\n        ...data,\n    };\n\n    return loadedQuote;\n}\n\nexport async function addQuote ( quoteData ) {\n    const response = await fetch( `${ FIREBASE_DOMAIN }/quotes.json`, {\n        method: 'POST',\n        body: JSON.stringify( quoteData ),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    } );\n    const data = await response.json();\n\n    if ( !response.ok )\n    {\n        throw new Error( data.message || 'Could not create quote.' );\n    }\n\n    return null;\n}\n\nexport async function addComment ( requestData ) {\n    const response = await fetch( `${ FIREBASE_DOMAIN }/comments/${ requestData.quoteId }.json`, {\n        method: 'POST',\n        body: JSON.stringify( requestData.commentData ),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    } );\n    const data = await response.json();\n\n    if ( !response.ok )\n    {\n        throw new Error( data.message || 'Could not add comment.' );\n    }\n\n    return { commentId: data.name };\n}\n\nexport async function getAllComments ( quoteId ) {\n    const response = await fetch( `${ FIREBASE_DOMAIN }/comments/${ quoteId }.json` );\n\n    const data = await response.json();\n\n    if ( !response.ok )\n    {\n        throw new Error( data.message || 'Could not get comments.' );\n    }\n\n    const transformedComments = [];\n\n    for ( const key in data )\n    {\n        const commentObj = {\n            id: key,\n            ...data[ key ],\n        };\n\n        transformedComments.push( commentObj );\n    }\n\n    return transformedComments;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { createContext } from \"react\";\n\nconst QuotesContext = createContext( {\n    quotes: [],\n    updateQuotes: ( newQuotes ) => { }\n} );\n\nexport default QuotesContext;","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = ( props ) => {\n  return (\n    <li className={ classes.item }>\n      <figure>\n        <blockquote>\n          <p>{ props.text }</p>\n        </blockquote>\n        <figcaption>{ props.author }</figcaption>\n      </figure>\n      <Link to={ `/quotes/${ props.id }` } className='btn'>VewFullscreen</Link>\n\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment, useContext } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuotesContext from '../../store/QuotesContext';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst sortQuotes = ( quotes, ascending ) => {\n  return quotes.sort( ( quoteA, quoteB ) => {\n    if ( ascending )\n    {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else\n    {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  } );\n};\n\nconst QuoteList = ( props ) => {\n  const history = useHistory();\n  const location = useLocation();\n  const qureyParams = new URLSearchParams( location.search );\n  const quotesState = useContext( QuotesContext );\n\n\n  const changeSortingHandler = () => {\n    const sufix = qureyParams.get( 'sort' ) === 'asc' ? 'des' : 'asc';\n    history.push( {\n      pathname: location.pathname,\n      search: `?sort=${ sufix }`\n    } );\n  };\n\n  const sortedList = sortQuotes( quotesState.quotes, qureyParams.get( 'sort' ) === 'asc' );\n  return (\n    <Fragment>\n      <div className={ classes.sorting }>\n        <button onClick={ changeSortingHandler }>Sort { qureyParams.get( 'sort' ) === 'asc' ? 'Descending' : 'Ascending' }</button>\n      </div>\n      <ul className={ classes.list }>\n        { sortedList.map( ( quote ) => (\n          <QuoteItem\n            key={ quote.id }\n            id={ quote.id }\n            author={ quote.author }\n            text={ quote.text }\n          />\n        ) ) }\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={ classes.noquotes }>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useContext, useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../services/api\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound.js\";\nimport QuotesContext from \"../store/QuotesContext\";\n\nconst Quotes = () => {\n    const { sendRequest, status, data: loadedQuote, error } = useHttp( getAllQuotes, true );\n    const quotesContext = useContext( QuotesContext );\n\n    useEffect( () => {\n        sendRequest();\n    }, [ sendRequest ] );\n\n    useEffect( () => {\n        if ( status === \"completed\" )\n        {\n            quotesContext.updateQuotes( loadedQuote );\n        }\n    }, [ status, loadedQuote, quotesContext ] );\n\n    if ( status === 'pending' )\n    {\n        return <div className=\"centered\">\n            <LoadingSpinner />\n        </div>;\n    }\n\n    if ( error )\n    {\n        return <p className='centered focused'>{ error } </p>;\n    }\n\n    if ( status === \"completed\" && ( loadedQuote.length === 0 || !loadedQuote ) )\n    {\n\n        return <NoQuotesFound />;\n    }\n\n    return <QuoteList />;\n\n};\n\nexport default Quotes;","import style from \"./MainNavigation.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MainNavigation = () => {\n    return <header className={ style.header }>\n        <div className={ style.logo }>My Quotes</div>\n        <nav className={ style.nav }>\n            <ul>\n                <li><NavLink activeClassName={ style.active } to=\"/quotes\">Quotes</NavLink></li>\n                <li><NavLink activeClassName={ style.active } to=\"/new-quote\">Add a Quote</NavLink></li>\n            </ul>\n        </nav>\n    </header>;\n};\n\nexport default MainNavigation;","import style from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = ( props ) => {\n    return <>\n        <MainNavigation />\n        <main className={ style.main }>\n            { props.children }\n        </main>\n    </>;\n};\n\nexport default Layout;","import React, { Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Quotes from './pages/Quotes';\nimport Layout from './components/layout/Layout';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\n\nconst QuoteDetails = React.lazy( () => import( './pages/QuoteDetails' ) );\nconst NewQuote = React.lazy( () => import( './pages/NewQuotes' ) );\nconst NotFound = React.lazy( () => import( './pages/NotFound' ) );\n\n\nfunction App () {\n  return <Layout>\n    <Suspense fallback={ <div className='centered'><LoadingSpinner /></div> }>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path='/quotes' exact>\n          <Quotes />\n        </Route>\n        <Route path='/quotes/:quoteId' >\n          <QuoteDetails />\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Suspense>\n  </Layout>;\n}\n\nexport default App;\n","import { useState } from \"react\";\nimport QuotesContext from \"./QuotesContext\";\n\nconst QuoteProvider = ( props ) => {\n    const [ quotes, setQuotes ] = useState( [] );\n\n    const updateQuotesHandler = ( newQuotes ) => {\n        setQuotes( newQuotes );\n    };\n\n    const state = {\n        quotes: quotes,\n        updateQuotes: updateQuotesHandler\n    };\n\n    return <QuotesContext.Provider value={ state }>\n        { props.children }\n    </QuotesContext.Provider>;\n};\n\nexport default QuoteProvider;","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport QuoteProvider from \"./store/QuotesProvider\";\n\nReactDOM.render( <QuoteProvider>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n</QuoteProvider>, document.getElementById( 'root' ) );\n"],"sourceRoot":""}