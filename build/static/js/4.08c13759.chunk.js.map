{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEnter","setIsEnter","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","replace","data"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,2FCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,UAC7C,E,yBCsDcC,EAnDG,SAAEL,GAClB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAgCE,oBAAU,GAA1C,mBAAQC,EAAR,KAAiBC,EAAjB,KAoBA,OACE,qCACE,cAAC,IAAD,CAAQC,KAAOF,EAAUG,QAAU,SAAEC,GAAF,MAAgB,4CAAhB,IACnC,cAAC,EAAD,UACE,uBAAMC,QAXa,WACvBJ,GAAY,EACb,EASwCV,UAAYC,IAAQc,KAAOC,SAtBpE,SAA6BC,GAC3BA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAY,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAaK,UACIvB,EAAM2B,WACN,qBAAK1B,UAAYC,IAAQ0B,QAAzB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAYC,IAAQ4B,QAAzB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAM5B,OAEvC,sBAAKL,UAAYC,IAAQ4B,QAAzB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAM1B,OAErC,qBAAKP,UAAYC,IAAQkC,QAAzB,SACE,wBAAQC,QAxBS,WACzB1B,GAAY,EACb,EAsBgDV,UAAU,MAAjD,gCAMX,E,gBC/BcqC,UAlBE,WACb,IAAMC,EAAUC,cAChB,EAAgCC,YAASC,KAAjCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAW,WACS,cAAXD,GAEDL,EAAQO,QAAS,UAExB,GAAE,CAAEF,EAAQL,IAMb,OAAO,cAAC,EAAD,CAAWZ,UAAuB,YAAXiB,EAAuBpB,WAJ7B,SAAEuB,GACtBJ,EAAaI,EAChB,GAGJ,C","file":"static/js/4.08c13759.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = ( props ) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [ isEnter, setIsEnter ] = useState( false );\n\n  function submitFormHandler ( event ) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote( { author: enteredAuthor, text: enteredText } );\n  }\n\n  const focusFormhandler = () => {\n    setIsEnter( true );\n  };\n  const finishInputHandler = () => {\n    setIsEnter( false );\n  };\n\n  return (\n    <>\n      <Prompt when={ isEnter } message={ ( location ) => \"All your data will be lost, Are u sure ???\" } />\n      <Card>\n        <form onFocus={ focusFormhandler } className={ classes.form } onSubmit={ submitFormHandler }>\n          { props.isLoading && (\n            <div className={ classes.loading }>\n              <LoadingSpinner />\n            </div>\n          ) }\n\n          <div className={ classes.control }>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={ authorInputRef } />\n          </div>\n          <div className={ classes.control }>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={ textInputRef }></textarea>\n          </div>\n          <div className={ classes.actions }>\n            <button onClick={ finishInputHandler } className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm';\nimport { useHistory } from \"react-router-dom\";\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from \"../services/api\";\nimport { useEffect } from 'react';\n\n\nconst NewQuote = () => {\n    const history = useHistory();\n    const { sendRequest, status } = useHttp( addQuote );\n\n    useEffect( () => {\n        if ( status === 'completed' )\n        {\n            history.replace( '/quotes' );\n        }\n    }, [ status, history ] );\n\n    const addQuoteHandler = ( data ) => {\n        sendRequest( data );\n    };\n\n    return <QuoteForm isLoading={ status === 'pending' } onAddQuote={ addQuoteHandler } />;\n};\n\nexport default NewQuote;"],"sourceRoot":""}